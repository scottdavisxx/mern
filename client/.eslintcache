[{"/home/scott/code/mern/client/src/index.js":"1","/home/scott/code/mern/client/src/App.js":"2","/home/scott/code/mern/client/src/reportWebVitals.js":"3","/home/scott/code/mern/client/src/components/navbar.js":"4","/home/scott/code/mern/client/src/components/screens/Home.js":"5","/home/scott/code/mern/client/src/components/screens/Profile.js":"6","/home/scott/code/mern/client/src/components/screens/Signup.js":"7","/home/scott/code/mern/client/src/components/screens/Signin.js":"8","/home/scott/code/mern/client/src/components/screens/CreatePost.js":"9","/home/scott/code/mern/client/src/reducers/userReducer.js":"10"},{"size":500,"mtime":1606803370691,"results":"11","hashOfConfig":"12"},{"size":1503,"mtime":1615440184620,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606803370691,"results":"14","hashOfConfig":"12"},{"size":1154,"mtime":1615526794555,"results":"15","hashOfConfig":"12"},{"size":1355,"mtime":1615440638368,"results":"16","hashOfConfig":"12"},{"size":2266,"mtime":1615774602706,"results":"17","hashOfConfig":"12"},{"size":2449,"mtime":1611630458271,"results":"18","hashOfConfig":"12"},{"size":2541,"mtime":1615437771146,"results":"19","hashOfConfig":"12"},{"size":2495,"mtime":1611637198131,"results":"20","hashOfConfig":"12"},{"size":198,"mtime":1615526433334,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1aflmg8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":1,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"24"},"/home/scott/code/mern/client/src/index.js",[],["51","52"],"/home/scott/code/mern/client/src/App.js",["53","54"],"import React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport NavBar from './components/navbar';\nimport \"./App.css\"\nimport {BrowserRouter,Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Profile from './components/screens/Profile'\nimport Signin from './components/screens/Signin'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initalState} from './reducers/userReducer'\n\n export const UserContext = createContext()\n\n const Routing = ()=>{\n   const history = useHistory()\n   const {state,dispatch} = useContext(UserContext);\n   useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"USER\"));\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      history.push('/')\n    } else {\n      history.push('/signin')\n    }\n   },[])\n   return(\n    <Switch>\n    <Route exact path='/'>\n    <Home />\n    </Route>\n    <Route path='/signup'>\n      <Signup />\n    </Route>\n    <Route path='/signin'>\n      <Signin />\n    </Route>\n    <Route path='/profile'>\n      <Profile />\n    </Route>\n    <Route path='/create'>\n      <CreatePost />\n    </Route>\n    </Switch>\n   )\n }\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initalState)\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/scott/code/mern/client/src/reportWebVitals.js",[],"/home/scott/code/mern/client/src/components/navbar.js",[],"/home/scott/code/mern/client/src/components/screens/Home.js",["55"],"import React,{useState, useEffect} from 'react'\n\nconst Home = ()=>{\n    const [data,setData] = useState([])\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers:{\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result) \n            setData(result) \n        })\n    },[])\n\n    return(\n        <div className='home'>\n            {\n                data.map(item=>{\n                    console.log(item)\n                    return(\n                        <div className='card home-card'>\n                        <h5>{item.postedBy.name}</h5>\n                            <div className='card-image'>\n                                <img src={item.photo}/>\n                            </div>\n                            <div className='card-content'>\n                                <i className=\"material-icons\" style={{color: 'red'}}>favorite</i>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                <input type='text' placeholder='comment'/>\n                            </div>\n                        </div>\n                    )\n                })\n   \n            }\n                 \n\n        )\n        </div>\n    )\n}\n\nexport default Home","/home/scott/code/mern/client/src/components/screens/Profile.js",["56","57","58","59","60","61","62","63","64"],"import React, {useEffect, useState} from 'react'\n\nconst Profile = ()=>{\n    const [mypics,setPics] = useState([])\n    useEffect(()=>{\n       fetch('/mypost',{\n           headers:{\n               \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n        //    console.log(result)\n        setPics(results.mypost)\n       })\n    },[])\n    return(\n        <div style={{maxWidth: '1400px', margin: '0 auto',}}>\n            <div style={{display: 'flex', \n                         justifyContent: 'space-around',\n                         margin: '18px auto',\n                         borderBottom: '1px solid gray',\n                         maxWidth: '550px',}}>\n                <div>\n                    <img style={{width: '160px', height: '160px', borderRadius: '80px'}}\n                    src='https://i.imgur.com/z2U2iYx.jpg'></img>\n                </div>\n                <div>\n                    <h4>Scott Davis</h4>\n                    <div style={{display: 'flex',\n                                 justifyContent: 'space-between',\n                                 width: '108%',}}>\n                        <h6>40 posts</h6>\n                        <h6>50 followers</h6>\n                        <h6>60 following</h6>\n                    </div>\n                </div>\n\n            </div>\n\n            <div className='gallery'>\n                {\n                    mypics.map(item=>{\n                        return(\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />,\n                            <img className='item' src='https://i.imgur.com/z2U2iYx.jpg' />\n                        )\n                    })\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","/home/scott/code/mern/client/src/components/screens/Signup.js",["65","66"],"import React,{useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst SignUp = ()=>{\n\n    const history = useHistory();\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n         M.toast({html: 'Please enter a valid email address.',classes:'#d50000 red accent-4'})\n         return;\n        }\n        fetch('/signup',{\n               method: 'post',\n               headers:{\n                   \"Content-Type\":\"application/json\"\n               },\n               body:JSON.stringify({\n                   name,\n                   password,\n                   email\n               })\n            }).then(res=>res.json())\n            .then(data=>{\n                if(data.error){\n                    M.toast({html: data.error,classes:'#d50000 red accent-4'})\n                } else {\n                    M.toast({html: data.message,classes:'#76ff03 light-green accent-3'})\n                    history.push('./signin')\n                }\n            }).catch(err=>{\n                console.log(err);\n            })\n        }\n\n    return(\n        <div className=\"myCard\">\n            <div className=\"card authCard input-field\">\n                <h2>Scottagram</h2>\n                <input \n                    type=\"text\" \n                    placeholder=\"name\"\n                    value={name}\n                    onChange={(e)=>setName(e.target.value)} />\n                <input \n                    type=\"text\" \n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)} />\n                <input \n                    type=\"password\" \n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)} />\n                <button className=\"btn waves-effect waves-light blue darken\"\n                onClick={()=>PostData()}>\n                    Sign Up\n                </button>\n                <h5>\n                    <Link to=\"/signin\">Already have an account?</Link>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp",["67","68"],"/home/scott/code/mern/client/src/components/screens/Signin.js",["69","70","71"],"import React,{useState, useContext,} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport {UserContext} from '../../App'\n \nconst SignIn = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n         M.toast({html: 'Please enter a valid email address.',classes:'#d50000 red accent-4'})\n         return;\n        }\n        fetch('/signin',{\n               method: 'post',\n               headers:{\n                   \"Content-Type\":\"application/json\"\n               },\n               body:JSON.stringify({\n                   password,\n                   email\n               })\n            }).then(res=>res.json())\n            .then(data=>{\n                console.log(data);\n                if(data.error){\n                    M.toast({html: data.error,classes:'#d50000 red accent-4'})\n                } else {\n                    localStorage.setItem('jwt', data.token)\n                    localStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({type:\"USER\", payload:data.user})\n                    M.toast({html:'Success: Signed In',classes:'#76ff03 light-green accent-3'})\n                    history.push('./')\n                }\n            }).catch(err=>{\n                console.log(err);\n            })\n        }\n\n    \n    return(\n        <div className=\"myCard\">\n            <div className=\"card authCard input-field\">\n                <h2>Scottagram</h2>\n                <input \n                    type=\"text\" \n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)} />\n                <input \n                    type=\"password\" \n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)} />\n                <button className=\"btn waves-effect waves-light blue darken\"\n                        onClick={()=>PostData()}>\n                    Sign In\n                </button>\n                <h5>\n                    <Link to=\"/signup\">Don't have an account?</Link>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn","/home/scott/code/mern/client/src/components/screens/CreatePost.js",["72"],"import React, {useState, useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\n\n\n\nconst CreatePost = () => {\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [image, setImage] = useState('')\n  const [url, setUrl] = useState('')\n  useEffect(()=>{\n    if(url){\n    fetch('/createpost',{\n      method:'post',\n      headers:{\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n      },\n      body:JSON.stringify({\n          title,\n          body,\n          pic:url\n      })  \n   }).then(res=>res.json())\n   .then(data=>{\n      //  console.log(data);\n       if(data.error){\n           M.toast({html: data.error,classes:'#d50000 red accent-4'})\n       } else {\n           M.toast({html:'Created Post!',classes:'#76ff03 light-green accent-3'})\n           history.push('./')\n       }\n   }).catch(err=>{\n       console.log(err);\n   })\n  }\n  }, [url])\n\n\n  const postDetails = ()=>{\n    const data = new FormData()\n    data.append('file', image)\n    data.append('upload_preset', 'scottagram')\n    data.append('cloud_name', 'scottdavisxx')\n    fetch('https://api.cloudinary.com/v1_1/scottdavisxx/image/upload',{\n      method:'post',\n      body:data\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      console.log(data)\n      setUrl(data.url)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n\n  }\n\n  return(\n    <div className='card input-filled'\n         style={{\n           margin: '30px auto',\n           maxWidth: '500px',\n           padding: '20px',\n           textAlign: 'center',\n         }}>\n      <input type='text' \n             placeholder='title'\n             value={title}\n             onChange={(e)=>setTitle(e.target.value)} />\n      <input type='text' \n             placeholder='body'\n             value={body}\n             onChange={(e)=>setBody(e.target.value)} />\n      <div className=\"file-field input-field\">\n      <div className=\"btn waves-effect waves-light blue darken\">\n        <span>Upload Image</span>\n        <input type=\"file\"\n               onChange={(e)=>setImage(e.target.files[0])}/>\n      </div>\n      <div className=\"file-path-wrapper\">\n        <input className=\"file-path validate\" type=\"text\"/>\n      </div>\n    </div>\n    <button className=\"btn waves-effect waves-light blue darken\"\n    onClick={()=>postDetails()}\n    >Submit Post</button>\n    </div>\n\n  )\n}\nexport default CreatePost","/home/scott/code/mern/client/src/reducers/userReducer.js",["73"],"export const initalState = null;\n\nexport const reducer = (state,action)=>{\n  if(action.type===\"USER\"){\n    return action.payload\n  } \n  if(action.type==\"CLEAR\"){\n    return null\n  }\n  return state\n}",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":11,"nodeType":"80","messageId":"81","endLine":16,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":25,"column":6,"nodeType":"84","endLine":25,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":26,"column":33,"nodeType":"88","endLine":26,"endColumn":56},{"ruleId":"89","severity":2,"message":"90","line":13,"column":17,"nodeType":"80","messageId":"91","endLine":13,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":24,"column":21,"nodeType":"88","endLine":25,"endColumn":59},{"ruleId":"86","severity":1,"message":"87","line":44,"column":29,"nodeType":"88","endLine":44,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":45,"column":29,"nodeType":"88","endLine":45,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":46,"column":29,"nodeType":"88","endLine":46,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":47,"column":29,"nodeType":"88","endLine":47,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":48,"column":29,"nodeType":"88","endLine":48,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":49,"column":29,"nodeType":"88","endLine":49,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":50,"column":29,"nodeType":"88","endLine":50,"endColumn":91},{"ruleId":"92","severity":1,"message":"93","line":13,"column":23,"nodeType":"94","messageId":"95","endLine":13,"endColumn":24,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":13,"column":48,"nodeType":"94","messageId":"95","endLine":13,"endColumn":49,"suggestions":"97"},{"ruleId":"74","replacedBy":"98"},{"ruleId":"76","replacedBy":"99"},{"ruleId":"78","severity":1,"message":"79","line":7,"column":12,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":13,"column":23,"nodeType":"94","messageId":"95","endLine":13,"endColumn":24,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"93","line":13,"column":48,"nodeType":"94","messageId":"95","endLine":13,"endColumn":49,"suggestions":"101"},{"ruleId":"82","severity":1,"message":"102","line":39,"column":6,"nodeType":"84","endLine":39,"endColumn":11,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":7,"column":17,"nodeType":"106","messageId":"107","endLine":7,"endColumn":19},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-undef","'results' is not defined.","undef","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["111","112"],["113","114"],["108"],["109"],["115","116"],["117","118"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"messageId":"122","fix":"123","desc":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"125","fix":"129","desc":"127"},{"messageId":"122","fix":"130","desc":"124"},{"messageId":"125","fix":"131","desc":"127"},{"messageId":"122","fix":"132","desc":"124"},{"messageId":"125","fix":"133","desc":"127"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [dispatch, history]",{"range":"136","text":"137"},"removeEscape",{"range":"138","text":"139"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"140","text":"141"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"142","text":"139"},{"range":"143","text":"141"},{"range":"144","text":"139"},{"range":"145","text":"141"},{"range":"146","text":"139"},{"range":"147","text":"141"},"Update the dependencies array to be: [body, history, title, url]",{"range":"148","text":"149"},[890,892],"[dispatch, history]",[361,362],"",[361,361],"\\",[386,387],[386,386],[424,425],[424,424],[449,450],[449,449],[1009,1014],"[body, history, title, url]"]