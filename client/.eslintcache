[{"/Users/sd/code/mern/client/src/index.js":"1","/Users/sd/code/mern/client/src/reportWebVitals.js":"2","/Users/sd/code/mern/client/src/App.js":"3","/Users/sd/code/mern/client/src/components/screens/UserProfile.js":"4","/Users/sd/code/mern/client/src/components/screens/Signin.js":"5","/Users/sd/code/mern/client/src/components/screens/Profile.js":"6","/Users/sd/code/mern/client/src/components/navbar.js":"7","/Users/sd/code/mern/client/src/components/screens/Home.js":"8","/Users/sd/code/mern/client/src/components/screens/CreatePost.js":"9","/Users/sd/code/mern/client/src/components/screens/Signup.js":"10","/Users/sd/code/mern/client/src/reducers/userReducer.js":"11","/Users/sd/code/mern/client/src/components/screens/SubscribedUserPosts.js":"12"},{"size":500,"mtime":1616719050670,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1616719050671,"results":"15","hashOfConfig":"14"},{"size":1820,"mtime":1616815817717,"results":"16","hashOfConfig":"14"},{"size":4420,"mtime":1616814257373,"results":"17","hashOfConfig":"14"},{"size":2541,"mtime":1616719050670,"results":"18","hashOfConfig":"14"},{"size":1953,"mtime":1616813073736,"results":"19","hashOfConfig":"14"},{"size":1218,"mtime":1616815701122,"results":"20","hashOfConfig":"14"},{"size":5833,"mtime":1616719050670,"results":"21","hashOfConfig":"14"},{"size":2495,"mtime":1616719050670,"results":"22","hashOfConfig":"14"},{"size":2449,"mtime":1616719050670,"results":"23","hashOfConfig":"14"},{"size":352,"mtime":1616719050671,"results":"24","hashOfConfig":"14"},{"size":5836,"mtime":1616815138247,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1j7cmft",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/Users/sd/code/mern/client/src/index.js",[],["59","60"],"/Users/sd/code/mern/client/src/reportWebVitals.js",[],"/Users/sd/code/mern/client/src/App.js",["61","62","63"],"/Users/sd/code/mern/client/src/components/screens/UserProfile.js",["64","65","66","67"],"import React,{useEffect,useState,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\nconst Profile  = ()=>{\n    const [userProfile,setProfile] = useState(null)\n    const [showFollow,setShowFollow] = useState(true)\n    const {state,dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n    useEffect(()=>{\n       fetch(`/user/${userid}`,{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n        //   console.log(result)\n          \n          setProfile(result)\n       })\n    },[])\n\n    const followUser = ()=>{\n        fetch('/follow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:[...prevState.user.followers,data._id]\n                    }\n                }\n            })\n            setShowFollow(false)\n\n        })\n    }\n\n    const unfollowUser = ()=>{\n        fetch('/unfollow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                const newFollower = prevState.user.followers.filter(item=>item != data._id)\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:newFollower\n                    }\n                }\n            })\n            setShowFollow(true)\n        })\n    }\n\n    return(\n      <>\n      {userProfile ? \n        <div style={{maxWidth: '1400px', margin: '0 auto',}}>\n        <div style={{display: 'flex', \n                     justifyContent: 'space-around',\n                     margin: '18px auto',\n                     borderBottom: '1px solid gray',\n                     maxWidth: '550px',}}>\n            <div>\n                <img style={{width: '160px', height: '160px', borderRadius: '80px'}}\n                src='https://i.imgur.com/z2U2iYx.jpg'></img>\n            </div>\n            <div>\n                <h4>{userProfile.user.name}</h4>\n                <h5>{userProfile.user.email}</h5>\n                <div style={{display: 'flex',\n                             justifyContent: 'space-between',\n                             width: '108%',}}>\n                    <h6>{userProfile.posts.length} posts</h6>\n                    <h6>{userProfile.user.followers.length} followers</h6>\n                    <h6>{userProfile.user.following.length} following</h6>\n                </div>\n                {showFollow?\n                    <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light blue darken\"\n                    onClick={()=>followUser()}>\n                    Follow\n                </button>\n                :\n                <button  style={{margin:\"10px\"}} className=\"btn waves-effect waves-light blue darken\"\n                        onClick={()=>unfollowUser()}>\n                    Un Follow\n                </button>\n                }\n\n\n            </div>\n\n        </div>\n        <div className='gallery'>\n            {\n                userProfile.posts.map(item=>{\n                    return(\n                        <img key={item._id} className='item' src={item.photo} alt={item.title} />\n                    )\n                })\n            }\n\n\n        </div>\n    </div>\n      : <h2>loading...</h2>}\n        \n      </>\n    )\n}\n\nexport default Profile","/Users/sd/code/mern/client/src/components/screens/Signin.js",["68","69","70"],"import React,{useState, useContext,} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport {UserContext} from '../../App'\n \nconst SignIn = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n         M.toast({html: 'Please enter a valid email address.',classes:'#d50000 red accent-4'})\n         return;\n        }\n        fetch('/signin',{\n               method: 'post',\n               headers:{\n                   \"Content-Type\":\"application/json\"\n               },\n               body:JSON.stringify({\n                   password,\n                   email\n               })\n            }).then(res=>res.json())\n            .then(data=>{\n                console.log(data);\n                if(data.error){\n                    M.toast({html: data.error,classes:'#d50000 red accent-4'})\n                } else {\n                    localStorage.setItem('jwt', data.token)\n                    localStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({type:\"USER\", payload:data.user})\n                    M.toast({html:'Success: Signed In',classes:'#76ff03 light-green accent-3'})\n                    history.push('./')\n                }\n            }).catch(err=>{\n                console.log(err);\n            })\n        }\n\n    \n    return(\n        <div className=\"myCard\">\n            <div className=\"card authCard input-field\">\n                <h2>Scottagram</h2>\n                <input \n                    type=\"text\" \n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)} />\n                <input \n                    type=\"password\" \n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)} />\n                <button className=\"btn waves-effect waves-light blue darken\"\n                        onClick={()=>PostData()}>\n                    Sign In\n                </button>\n                <h5>\n                    <Link to=\"/signup\">Don't have an account?</Link>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn","/Users/sd/code/mern/client/src/components/screens/Profile.js",["71","72"],"import React,{useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../../App'\n\nconst Profile = ()=>{\n    const [mypics,setPics] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n       fetch('/mypost',{\n           headers:{\n               \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n        setPics(result.mypost)\n       })\n    },[])\n    return(\n        <div style={{maxWidth: '1400px', margin: '0 auto',}}>\n            <div style={{display: 'flex', \n                         justifyContent: 'space-around',\n                         margin: '18px auto',\n                         borderBottom: '1px solid gray',\n                         maxWidth: '550px',}}>\n                <div>\n                    <img style={{width: '160px', height: '160px', borderRadius: '80px'}}\n                    src='https://i.imgur.com/z2U2iYx.jpg'></img>\n                </div>\n                <div>\n                    <h4>{state?state.name:\"loading...\"}</h4>\n                    <h5>{state?state.email:\"loading...\"}</h5>\n                    <div style={{display: 'flex',\n                                 justifyContent: 'space-between',\n                                 width: '108%',}}>\n                        <h6>{mypics.length} posts</h6>\n                        <h6>{state?state.followers.length:\"..\"} followers</h6>\n                        <h6>{state?state.following.length:\"..\"} following</h6>\n                    </div>\n                </div>\n\n            </div>\n\n            <div className='gallery'>\n                {\n                    mypics.map(item=>{\n                        return(\n                            <img key={item._id} className='item' src={item.photo} alt={item.title} />\n                        )\n                    })\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","/Users/sd/code/mern/client/src/components/navbar.js",[],"/Users/sd/code/mern/client/src/components/screens/Home.js",["73","74","75","76","77","78"],"import React,{useState, useEffect, useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst Home = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers:{\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result) \n            setData(result) \n        })\n    },[])\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n         fetch('/comment',{\n             method:\"put\",\n             headers:{\n                 \"Content-Type\":\"application/json\",\n                 \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n             },\n             body:JSON.stringify({\n                 postId,\n                 text\n             })\n         }).then(res=>res.json())\n         .then(result=>{\n             console.log(result)\n             const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n         }).catch(err=>{\n             console.log(err)\n         })\n    }\n\n    const deletePost = (postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n\n    return(\n        <div className='home'>\n            {\n                data.map(item=>{\n                    return(\n                        <div className='card home-card' key={item._id}>\n                            <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile/\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n                            }</h5>\n                            <div className='card-image'>\n                                <img src={item.photo}/>\n                            </div>\n                            <div className='card-content'>\n                                <i className=\"material-icons\" style={{color: 'red'}}>favorite</i>\n                                {item.likes.includes(state._id)\n                                ? \n                                <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                                >thumb_down</i>\n                                : \n                                <i className=\"material-icons\"\n                                    onClick={()=>{likePost(item._id)}}\n                                >thumb_up</i>\n                                }\n                                 \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                <input type='text' placeholder='comment'/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                })\n   \n            }\n                 \n\n        )\n        </div>\n    )\n}\n\nexport default Home","/Users/sd/code/mern/client/src/components/screens/CreatePost.js",["79"],"import React, {useState, useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\n\n\n\nconst CreatePost = () => {\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [image, setImage] = useState('')\n  const [url, setUrl] = useState('')\n  useEffect(()=>{\n    if(url){\n    fetch('/createpost',{\n      method:'post',\n      headers:{\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n      },\n      body:JSON.stringify({\n          title,\n          body,\n          pic:url\n      })  \n   }).then(res=>res.json())\n   .then(data=>{\n      //  console.log(data);\n       if(data.error){\n           M.toast({html: data.error,classes:'#d50000 red accent-4'})\n       } else {\n           M.toast({html:'Created Post!',classes:'#76ff03 light-green accent-3'})\n           history.push('./')\n       }\n   }).catch(err=>{\n       console.log(err);\n   })\n  }\n  }, [url])\n\n\n  const postDetails = ()=>{\n    const data = new FormData()\n    data.append('file', image)\n    data.append('upload_preset', 'scottagram')\n    data.append('cloud_name', 'scottdavisxx')\n    fetch('https://api.cloudinary.com/v1_1/scottdavisxx/image/upload',{\n      method:'post',\n      body:data\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      console.log(data)\n      setUrl(data.url)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n\n  }\n\n  return(\n    <div className='card input-filled'\n         style={{\n           margin: '30px auto',\n           maxWidth: '500px',\n           padding: '20px',\n           textAlign: 'center',\n         }}>\n      <input type='text' \n             placeholder='title'\n             value={title}\n             onChange={(e)=>setTitle(e.target.value)} />\n      <input type='text' \n             placeholder='body'\n             value={body}\n             onChange={(e)=>setBody(e.target.value)} />\n      <div className=\"file-field input-field\">\n      <div className=\"btn waves-effect waves-light blue darken\">\n        <span>Upload Image</span>\n        <input type=\"file\"\n               onChange={(e)=>setImage(e.target.files[0])}/>\n      </div>\n      <div className=\"file-path-wrapper\">\n        <input className=\"file-path validate\" type=\"text\"/>\n      </div>\n    </div>\n    <button className=\"btn waves-effect waves-light blue darken\"\n    onClick={()=>postDetails()}\n    >Submit Post</button>\n    </div>\n\n  )\n}\nexport default CreatePost","/Users/sd/code/mern/client/src/components/screens/Signup.js",["80","81"],"import React,{useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst SignUp = ()=>{\n\n    const history = useHistory();\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n         M.toast({html: 'Please enter a valid email address.',classes:'#d50000 red accent-4'})\n         return;\n        }\n        fetch('/signup',{\n               method: 'post',\n               headers:{\n                   \"Content-Type\":\"application/json\"\n               },\n               body:JSON.stringify({\n                   name,\n                   password,\n                   email\n               })\n            }).then(res=>res.json())\n            .then(data=>{\n                if(data.error){\n                    M.toast({html: data.error,classes:'#d50000 red accent-4'})\n                } else {\n                    M.toast({html: data.message,classes:'#76ff03 light-green accent-3'})\n                    history.push('./signin')\n                }\n            }).catch(err=>{\n                console.log(err);\n            })\n        }\n\n    return(\n        <div className=\"myCard\">\n            <div className=\"card authCard input-field\">\n                <h2>Scottagram</h2>\n                <input \n                    type=\"text\" \n                    placeholder=\"name\"\n                    value={name}\n                    onChange={(e)=>setName(e.target.value)} />\n                <input \n                    type=\"text\" \n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)} />\n                <input \n                    type=\"password\" \n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)} />\n                <button className=\"btn waves-effect waves-light blue darken\"\n                onClick={()=>PostData()}>\n                    Sign Up\n                </button>\n                <h5>\n                    <Link to=\"/signin\">Already have an account?</Link>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp","/Users/sd/code/mern/client/src/reducers/userReducer.js",["82","83"],"export const initalState = null;\n\nexport const reducer = (state,action)=>{\n  if(action.type===\"USER\"){\n    return action.payload\n  } \n  if(action.type==\"CLEAR\"){\n    return null\n  }\n  if (action.type == \"UPDATE\"){\n    return {\n      ...state,\n      followers:action.payload.followers,\n      following:action.payload.following\n    }\n  }\n  return state\n}","/Users/sd/code/mern/client/src/components/screens/SubscribedUserPosts.js",["84","85","86","87","88","89"],"import React,{useState, useEffect, useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst Home = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/getsubpost',{\n            headers:{\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result) \n            setData(result) \n        })\n    },[])\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n         fetch('/comment',{\n             method:\"put\",\n             headers:{\n                 \"Content-Type\":\"application/json\",\n                 \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\n             },\n             body:JSON.stringify({\n                 postId,\n                 text\n             })\n         }).then(res=>res.json())\n         .then(result=>{\n             console.log(result)\n             const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n         }).catch(err=>{\n             console.log(err)\n         })\n    }\n\n    const deletePost = (postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n\n    return(\n        <div className='home'>\n            {\n                data.map(item=>{\n                    return(\n                        <div className='card home-card' key={item._id}>\n                            <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile/\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n                            }</h5>\n                            <div className='card-image'>\n                                <img src={item.photo}/>\n                            </div>\n                            <div className='card-content'>\n                                <i className=\"material-icons\" style={{color: 'red'}}>favorite</i>\n                                {item.likes.includes(state._id)\n                                ? \n                                <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                                >thumb_down</i>\n                                : \n                                <i className=\"material-icons\"\n                                    onClick={()=>{likePost(item._id)}}\n                                >thumb_up</i>\n                                }\n                                 \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                <input type='text' placeholder='comment'/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                })\n   \n            }\n                 \n\n        )\n        </div>\n    )\n}\n\nexport default Home",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":17,"column":10,"nodeType":"96","messageId":"97","endLine":17,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":18,"column":11,"nodeType":"96","messageId":"97","endLine":18,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":26,"column":6,"nodeType":"101","endLine":26,"endColumn":8,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"98","line":7,"column":12,"nodeType":"96","messageId":"97","endLine":7,"endColumn":17},{"ruleId":"99","severity":1,"message":"103","line":20,"column":7,"nodeType":"101","endLine":20,"endColumn":9,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":66,"column":80,"nodeType":"107","messageId":"108","endLine":66,"endColumn":82},{"ruleId":"109","severity":1,"message":"110","line":89,"column":17,"nodeType":"111","endLine":90,"endColumn":55},{"ruleId":"94","severity":1,"message":"98","line":7,"column":12,"nodeType":"96","messageId":"97","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":13,"column":23,"nodeType":"114","messageId":"115","endLine":13,"endColumn":24,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":13,"column":48,"nodeType":"114","messageId":"115","endLine":13,"endColumn":49,"suggestions":"117"},{"ruleId":"94","severity":1,"message":"118","line":6,"column":18,"nodeType":"96","messageId":"97","endLine":6,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":25,"column":21,"nodeType":"111","endLine":26,"endColumn":59},{"ruleId":"94","severity":1,"message":"118","line":7,"column":18,"nodeType":"96","messageId":"97","endLine":7,"endColumn":26},{"ruleId":"105","severity":1,"message":"119","line":34,"column":28,"nodeType":"107","messageId":"108","endLine":34,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":60,"column":28,"nodeType":"107","messageId":"108","endLine":60,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":87,"column":28,"nodeType":"107","messageId":"108","endLine":87,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":121,"column":169,"nodeType":"107","messageId":"108","endLine":121,"endColumn":171},{"ruleId":"109","severity":1,"message":"110","line":129,"column":33,"nodeType":"111","endLine":129,"endColumn":56},{"ruleId":"99","severity":1,"message":"120","line":39,"column":6,"nodeType":"101","endLine":39,"endColumn":11,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"113","line":13,"column":23,"nodeType":"114","messageId":"115","endLine":13,"endColumn":24,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"113","line":13,"column":48,"nodeType":"114","messageId":"115","endLine":13,"endColumn":49,"suggestions":"123"},{"ruleId":"105","severity":1,"message":"119","line":7,"column":17,"nodeType":"107","messageId":"108","endLine":7,"endColumn":19},{"ruleId":"105","severity":1,"message":"119","line":10,"column":19,"nodeType":"107","messageId":"108","endLine":10,"endColumn":21},{"ruleId":"94","severity":1,"message":"118","line":7,"column":18,"nodeType":"96","messageId":"97","endLine":7,"endColumn":26},{"ruleId":"105","severity":1,"message":"119","line":34,"column":28,"nodeType":"107","messageId":"108","endLine":34,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":60,"column":28,"nodeType":"107","messageId":"108","endLine":60,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":87,"column":28,"nodeType":"107","messageId":"108","endLine":87,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":121,"column":169,"nodeType":"107","messageId":"108","endLine":121,"endColumn":171},{"ruleId":"109","severity":1,"message":"110","line":129,"column":33,"nodeType":"111","endLine":129,"endColumn":56},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["127"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["128","129"],["130","131"],"'dispatch' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["132"],["133","134"],["135","136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"messageId":"141","fix":"142","desc":"143"},{"messageId":"144","fix":"145","desc":"146"},{"messageId":"141","fix":"147","desc":"143"},{"messageId":"144","fix":"148","desc":"146"},{"desc":"149","fix":"150"},{"messageId":"141","fix":"151","desc":"143"},{"messageId":"144","fix":"152","desc":"146"},{"messageId":"141","fix":"153","desc":"143"},{"messageId":"144","fix":"154","desc":"146"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},"Update the dependencies array to be: [userid]",{"range":"157","text":"158"},"removeEscape",{"range":"159","text":"160"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"161","text":"162"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"163","text":"160"},{"range":"164","text":"162"},"Update the dependencies array to be: [body, history, title, url]",{"range":"165","text":"166"},{"range":"167","text":"160"},{"range":"168","text":"162"},{"range":"169","text":"160"},{"range":"170","text":"162"},[1052,1054],"[dispatch]",[654,656],"[userid]",[424,425],"",[424,424],"\\",[449,450],[449,449],[1009,1014],"[body, history, title, url]",[361,362],[361,361],[386,387],[386,386]]